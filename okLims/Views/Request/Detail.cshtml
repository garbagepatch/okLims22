@model okLims.Models.Request

@{
    ViewData["Title"] = "Request Detail";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.RequestId)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.RequesterEmail)
                            </dd>
                            <dt>
                                @Html.DisplayFor(model => model.FilterSize)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.FilterType)
                            </dd>
                            <dt>
                                @Html.DisplayFor(model => model.ControllerType)
                            </dt>

                            <dt>
                                @Html.DisplayNameFor(model => model.Start)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.End)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Laboratory)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.RequesterEmail)
                            </dd>
                        </dl>
                    </div>


                </div>
            </div>
            <!-- /.box-body -->
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
        <div class="box">

            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="Grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8">

                    </div>
               
                </div>

            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->



@section Styles{

}

@section Scripts{

    <script type="text/javascript">
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/RequestLine",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "RequestId": @Model.RequestId}],
                offline: true
            });

         
            var dataManagerRequest = ej.DataManager({
                url: "/api/Request",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerLaboratory = ej.DataManager({
                url: "/api/Laboratory",
                adaptor: new ej.WebApiAdaptor()
            });


            $('#LaboratoryName').ejDropDownList({
                dataSource: dataManagerLaboratory,
                fields: { id: 'LaboratoryId', text: 'Laboratory Name', value:'LaboratoryName' },
                value: @Model.LaboratoryId,
                enabled: false,
            });
                  $('#FilterID').ejDropDownList({
                dataSource: dataManagerFilterType,
                fields: { id: 'FilterID', text: 'Filter Type', value:'filterType' },
                value: @Model.FilterID,
                enabled: false,
                  });
                    $('#SizeID').ejDropDownList({
                dataSource: dataManagerFilterSize,
                fields: { id: 'SizeID', text: 'Filter Size', value:'filterSize' },
                value: @Model.SizeID,
                enabled: false,
                    });
                    $('#ControllerID').ejDropDownList({
                dataSource: dataManagerControllerType,
                fields: { id: 'ControllerID', text: 'Controller Type', value:'controllerType' },
                value: @Model.ControllerID,
                enabled: false,
            });


            dataManager.ready.done(function (e) {
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    insertUrl: "/api/RequestLine/Insert",
                    updateUrl: "/api/RequestLine/Update",
                    removeUrl: "/api/RequestLine/Remove",
                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                },
                editSettings: {
                    allowEditing: true,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,

                },
                allowPaging: true,
                columns: [
                    { field: "RequestLineId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                      { field: "RequestId", headerText: 'Request ID', defaultValue: @Model.RequestId, foreignKeyField: "RequestId", foreignKeyValue: "RequestId", dataSource: dataManagerRequest, visible: false },
                        { field: "RequesterEmail", headerText: 'RequesterEmail', allowEditing: true },
                        { field: "FilterID", headerText: 'Filter Type', foreignKeyField: "FilterID", foreignKeyValue: "filterType", dataSource: dataManagerFilterType },
                        { field: "SizeID", headerText: 'FilterSize', foreignKeyField: "SizeID", foreignKeyValue: "filterSize", dataSource: dataManagerFilterSize },
                        { field: "Start", headerText: 'Order Date', editType: "datepicker", format: "{0:MM/dd/yyyy}" },
                        { field: "End", headerText: 'Delivery Date', editType: "datepicker", format: "{0:MM/dd/yyyy}" },
                        { field: "ControllerID", headerText: 'Controller Type', foreignKeyField: "ControllerID", foreignKeyValue: "controllerType", dataSource: dataManagerControllerType },
                        { field: "LaboratoryName", headerText: 'Laboratory Name', allowEditing: true, foreignKeyField: "LaboratoryId", foreignKeyValue: "LaboratoryName", dataSource: dataManagerLaboratory },
                    {field: "SpecialDetails", headerText: 'Special Details', allowEditing: true, editType: "text",},
                ],
                actionComplete: "complete",
            });
            });




        });

    
        



    </script>
}

